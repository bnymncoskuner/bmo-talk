{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Import material modules in shared module": {
		"scope": "typescript",
		"prefix": "shared-module-material-import",
		"body": "import { MatInputModule, MatIconModule, MatFormFieldModule, MatButtonModule } from '@angular/material';"
	},
	"Use material modules in shared module": {
		"scope": "typescript",
		"prefix": "shared-module-material-use",
		"body": [
    		"MatIconModule,",
    		"MatFormFieldModule,",
    		"MatInputModule,",
    		"MatButtonModule"
		]
	},
	"Put inputs in input.component": {
		"scope": "typescript",
		"prefix": "input-comp-define-inputs",
		"body": [
			"@Input() placeholder;",
			"@Input() icon;",
			"@Input() value;"
		]
	},
	"Put valueChange output in input.component": {
		"scope": "typescript",
		"prefix": "input-comp-define-output",
		"body": [
			"@Output() valueChange: EventEmitter<any> = new EventEmitter();"
		]
	},
	"Use mat form field in input.component": {
		"scope": "html",
		"prefix": "input-comp-mat-input",
		"body": [
			"<mat-form-field>",
			"\t<input matInput type=\"text\"",
			"\t\t[placeholder]=\"placeholder\"",
			"\t\t[ngModel]=\"value\" (ngModelChange)=\"updateValue(\\$event)\">",
			"</mat-form-field>"
		]
	},
	"Use mat button in input.component": {
		"scope": "html",
		"prefix": "input-comp-button",
		"body": [
			"<button *ngIf=\"icon\"",
			"\tmat-button",
			"\tmatSuffix",
			"\tmat-icon-button",
			"\t[disabled]=\"!value\"",
			"\t(click)=\"onClick()\">",
			"\t<mat-icon>{{icon}}</mat-icon>",
			"</button>\n"
		]
	},
	"Define input component scss": {
		"scope": "scss",
		"prefix": "input-comp-css",
		"body": [
			"mat-form-field {",
			"\twidth: 100%;",
			"",
			"\tbutton[mat-button] {",
			"\t\tfont-size: 2em;",
			"\t}",
			"}"
		]
	}
}
{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Define message component inputs": {
		"scope": "typescript",
		"prefix": "message-panel-message-inputs",
		"body": [
			"@Input() message;",
			"@Input() self: boolean;"
		]
	},
	"Put message component html": {
		"scope": "html",
		"prefix": "message-panel-message-html",
		"body": [
			"<div class=\"message\">",
			"\t<div class=\"bubble\" *ngIf=\"message\"",
			"\t\t[ngClass]=\"{'message-out': self, 'message-in': !self}\">",
			"\t\t<div class=\"sender\" *ngIf=\"!self\">",
			"\t\t\t{{message.sender.name}}",
			"\t\t</div>",
			"\t\t<div class=\"text\">",
			"\t\t\t{{message.text}}",
			"\t\t</div>",
			"\t\t\t<div class=\"time\">",
			"\t\t\t{{message.date | date:'shortTime' }}",
			"\t\t</div>",
			"\t</div>",
			"</div>"
		]
	},
	"Put message component css": {
		"scope": "scss",
		"prefix": "message-panel-message-scss",
		"body": [
			".message {",
			"\tposition: relative;",
			"\tpadding: 3px 15px 3px 15px;",
			"",
			"\t&::after {",
			"\t\tcontent: '';",
			"\t\tdisplay: table;",
			"\t\tclear: both;",
			"\t}",
			"",
			"\t.bubble {",
			"\t\tposition: relative;",
			"\t\tmax-width: 65%;",
			"\t\tborder-radius: 7.5px;",
			"\t\tposition: relative;",
			"\t\tbox-shadow: 0 1px 0.5px rgba(0,0,0,0.13);",
			"\t\tpadding: 6px 0 8px 0;",
			"\t\tpadding-left: 9px;",
			"\t\tpadding-right: 7px;",
			"\t\tmin-width: 110px;",
			"\t\tbox-sizing: border-box;",
			"",
			"\t\t.sender {",
			"\t\t\tcolor: #74cff8;",
			"\t\t\tdisplay: -webkit-flex;",
			"\t\t\tdisplay: flex;",
			"\t\t\tfont-family: 'Open Sans', sans-serif;",
			"\t\t\tfont-size: 12.5px;",
			"\t\t\tfont-weight: 600;",
			"\t\t\tline-height: 22px;",
			"\t\t}",
			"",
			"\t\t.text {",
			"\t\t\tposition: relative;",
			"\t\t\tword-wrap: break-word;",
			"\t\t\tmargin-bottom: 10px;",
			"\t\t}",
			"",
			"\t\t&.message-out {",
			"\t\t\tbackground-color: #dcf8c6;",
			"\t\t\tfloat: right;",
			"\t\t\tpadding-right: 15px;",
			"\t\t\tborder-top-left-radius: 7.5px;",
			"\t\t\tborder-top-right-radius: 0px;",
			"\t\t}",
			"",
			"\t\t&.message-in {",
			"\t\t\tbackground-color: #fff;",
			"\t\t\tfloat: left;",
			"\t\t\tpadding-left: 15px;",
			"\t\t\tborder-top-left-radius: 0px;",
			"\t\t\tborder-top-right-radius: 7.5px;",
			"\t\t}",
			"",
			"\t\t.time {",
			"\t\t\tposition: absolute;",
			"\t\t\tbottom: 3px;",
			"\t\t\tright: 7px;",
			"\t\t\tcolor: rgba(0, 0, 0, 0.45);",
			"\t\t\tfont-family: \"Roboto\", sans-serif;",
			"\t\t\tfont-size: 11px;",
			"\t\t\theight: 15px;",
			"\t\t\tline-height: 15px;",
			"\t\t\twhite-space: nowrap;",
			"\t\t}",
			"\t}",
			"}\n"
		]
	},
	"Put message panel html": {
		"scope": "html",
		"prefix": "message-panel-html",
		"body": [
			"<div class=\"message-panel message-content\"",
			"\t#messagePanel [scrollTop]=\"messagePanel.scrollHeight\">",
			"\t<app-message *ngFor=\"let message of messages$ | async\"",
			"\t\t[message]=\"message\"",
			"\t\t[self]=\"message.self\">",
			"\t</app-message>",
			"</div>\n"
		]
	},
	"Put message panel scss": {
		"scope": "scss",
		"prefix": "message-panel-scss",
		"body": [
			":host {",
			"\t.message-panel {",
			"\t\tbackground-color: #efefef;",
			"\t\toverflow-y: auto;",
			"\t\tdisplay: block;",
			"\t}",
			"",
			"\tapp-input {",
			"\t\tposition: fixed;",
			"\t\tleft: 0;",
			"\t\tbottom: 0;",
			"\t\twidth: 100%;",
			"\t}",
			"}\n"			  
		]
	},
	"Bind input component inputs": {
		"scope": "html",
		"prefix": "message-panel-input-binding",
		"body": "[(value)]=\"message\" placeholder=\"Type something\" icon=\"send\""
	}
}